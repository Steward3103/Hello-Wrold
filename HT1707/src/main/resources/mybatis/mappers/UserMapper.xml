<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!--保证接口和映射文件一一对应  -->
<mapper namespace="cn.tarena.ht.mapper.UserMapper">
	
	<select id="findAll" resultMap="userRM">
		select * from 
	(select * from 
	  user_p u
	     left join 
	(select u.user_info_id,u.name,u.card_no,u.manager_id,p.m_name,u.join_date,
	u.salary,u.birthday,u.gender,u.station,u.telephone,u.user_level,u.remark,
	u.order_no from 
	user_info_p u 
	            left join
	(select user_info_id m_id, name m_name from  user_info_p) p
	            on u.manager_id = p.m_id) info
	      on u.user_id = info.user_info_id)u
	      left join 
	 (select dept_id d_id, dept_name d_name from dept_p)d
	        on u.dept_id = d.d_id
	</select>
	
	
	<!--封装用户信息表  -->
	<resultMap type="User" id="userRM" autoMapping="true">
		<id column="user_id" property="userId"/>
		
		<!--一对一封装  dept  -->		
		<association property="dept" javaType="Dept">
			<id column="dept_id" property="deptId"/>
			<result column="d_name" property="deptName"/>
		</association>
		
		<!--封装userInfo对象  -->
		<association property="userInfo" javaType="UserInfo" resultMap="userInfoRM"/>
	</resultMap>
	
	<!--表示封装userInfo对象  -->
	<resultMap type="UserInfo" id="userInfoRM" autoMapping="true">
		<!--封装主键信息  -->
		<id column="user_info_id" property="userInfoId"/>
			<!--使用自动封装后将结果集自动映射  -->
		
		<!--一对一映射封装上级领导  -->
		<association property="manager" javaType="UserInfo">
			<id column="manager_id" property="userInfoId"/>
			<result column="m_name" property="name"/>
		</association>
	</resultMap>
	
	
	<!--修改用户的状态  -->
	<update id="updateState">
		update user_p set state = #{state} where user_id in (
			<foreach collection="userIds" item="id" separator=",">
				#{id}
			</foreach>
		)
	</update>
	
	<!--删除用户信息  -->
	<delete id="deleteUsers">
		delete from user_p  where user_id in (
			<foreach collection="array" item="id" separator=",">
				#{id}
			</foreach>
		)
	</delete>
	
	
	<!--新增用户信息  -->
	<insert id="saveUser">
		insert into user_p  
		values(
		#{userId},
		#{dept.deptId},
		#{username},
		#{password},
		#{state},
		#{createBy,jdbcType=VARCHAR},
		#{createDept,jdbcType=VARCHAR},
		#{createTime,jdbcType=DATE},
		#{updateBy,jdbcType=VARCHAR},
		#{updateTime,jdbcType=DATE}
		)
	</insert>
	
	
	<select id="findUserById" resultMap="userRM">
		select * from 
  (select * from 
    user_p u
       left join 
  (select u.user_info_id,u.name,u.card_no,u.manager_id,p.m_name,u.join_date,
  u.salary,u.birthday,u.gender,u.station,u.telephone,u.user_level,u.remark,
  u.order_no from 
  user_info_p u 
              left join
  (select user_info_id m_id, name m_name from  user_info_p) p
              on u.manager_id = p.m_id) info
        on u.user_id = info.user_info_id)u
        left join 
   (select dept_id d_id, dept_name d_name from dept_p)d
          on u.dept_id = d.d_id
   where user_id = #{userId}
	</select>
	
	
	<!--sql复用 -->
	<sql id="userUpdate">
		<if test="createBy !=null">create_by = #{createBy,jdbcType=VARCHAR},</if>
   		<if test="createDept !=null">create_dept = #{createDept,jdbcType=VARCHAR},</if>
   		<if test="createTime !=null">create_time = #{createTime},</if>
   		<if test="updateBy !=null">update_by = #{updateBy},</if>
   		<if test="updateTime !=null">update_time = #{updateTime}</if>
	</sql>
   <!--用户修改  
   	  SET 作用 去除标签末尾的 “,”号
   -->
   <update id="updateUser">
   		update user_p 
   		<set>
	   		dept_id = #{dept.deptId},
	   		username = #{username},
	   		password = #{password},
	   		state = #{state},
	   		<!-- <if test="createBy !=null">create_by = #{createBy,jdbcType=VARCHAR},</if>
	   		<if test="createDept !=null">create_dept = #{createDept,jdbcType=VARCHAR},</if>
	   		<if test="createTime !=null">create_time = #{createTime},</if>
	   		<if test="updateBy !=null">update_by = #{updateBy},</if>
	   		<if test="updateTime !=null">update_time = #{updateTime}</if> -->
	   		<include refid="userUpdate"/>
   		</set>
   		where user_id = #{userId}
   </update>
	
	<!--根据userid删除role_user_p中的数据  -->
	<delete id="deleteRoleUsers">
		delete from role_user_p where user_id = #{userId}
	</delete>
	
	
	<!--根据userId 查询中间表数据  -->
	<select id="finduRoleList" resultType="string">
		select role_id from role_user_p where user_id = #{userId}
	</select>
	
	
	<!--根据用户名和密码查询用户信息  -->
	<select id="findUserByU_P" resultMap="userRM">
		select * from 
  (select * from 
    user_p u
       left join 
  (select u.user_info_id,u.name,u.card_no,u.manager_id,p.m_name,u.join_date,
  u.salary,u.birthday,u.gender,u.station,u.telephone,u.user_level,u.remark,
  u.order_no from 
  user_info_p u 
              left join
  (select user_info_id m_id, name m_name from  user_info_p) p
              on u.manager_id = p.m_id) info
        on u.user_id = info.user_info_id)u
        left join 
   (select dept_id d_id, dept_name d_name from dept_p)d
          on u.dept_id = d.d_id
  where username= #{username} and password = #{password}
	</select>
	
	
	<select id="findUserByUserName" resultMap="userRM">
	select * from 
  (select * from 
    user_p u
       left join 
  (select u.user_info_id,u.name,u.card_no,u.manager_id,p.m_name,u.join_date,
  u.salary,u.birthday,u.gender,u.station,u.telephone,u.user_level,u.remark,
  u.order_no from 
  user_info_p u 
              left join
  (select user_info_id m_id, name m_name from  user_info_p) p
              on u.manager_id = p.m_id) info
        on u.user_id = info.user_info_id)u
        left join 
   (select dept_id d_id, dept_name d_name from dept_p)d
          on u.dept_id = d.d_id
  where username= #{username}
	</select>
	
	
	<!--根据userId查询模块信息  -->
	<select id="findPrililegeInfoList" resultType="string">
		select name
 		from module_p
 		where module_id in
       	(select module_id
          from role_module_p
          where role_id in
               (select role_id from role_user_p where user_id = #{userId})
        )
	</select>
	
	
	
	
	
	
	
	
	
	
	
</mapper>
